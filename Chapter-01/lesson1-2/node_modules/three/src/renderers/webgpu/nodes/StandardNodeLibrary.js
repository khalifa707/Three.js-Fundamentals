import NodeLibrary from 'three/src/renderers/common/nodes/NodeLibrary.js';

// Materials
import MeshPhongNodeMaterial from 'three/src/materials/nodes/MeshPhongNodeMaterial.js';
import MeshStandardNodeMaterial from 'three/src/materials/nodes/MeshStandardNodeMaterial.js';
import MeshPhysicalNodeMaterial from 'three/src/materials/nodes/MeshPhysicalNodeMaterial.js';
import MeshToonNodeMaterial from 'three/src/materials/nodes/MeshToonNodeMaterial.js';
import MeshBasicNodeMaterial from 'three/src/materials/nodes/MeshBasicNodeMaterial.js';
import MeshLambertNodeMaterial from 'three/src/materials/nodes/MeshLambertNodeMaterial.js';
import MeshNormalNodeMaterial from 'three/src/materials/nodes/MeshNormalNodeMaterial.js';
import MeshMatcapNodeMaterial from 'three/src/materials/nodes/MeshMatcapNodeMaterial.js';
import LineBasicNodeMaterial from 'three/src/materials/nodes/LineBasicNodeMaterial.js';
import LineDashedNodeMaterial from 'three/src/materials/nodes/LineDashedNodeMaterial.js';
import PointsNodeMaterial from 'three/src/materials/nodes/PointsNodeMaterial.js';
import SpriteNodeMaterial from 'three/src/materials/nodes/SpriteNodeMaterial.js';
import ShadowNodeMaterial from 'three/src/materials/nodes/ShadowNodeMaterial.js';
//import { MeshDepthMaterial } from '../../../materials/MeshDepthMaterial.js';
//import MeshDepthNodeMaterial from '../../../materials/nodes/MeshDepthNodeMaterial.js';
//import { MeshDistanceMaterial } from '../../../materials/MeshDistanceMaterial.js';
//import MeshDistanceNodeMaterial from '../../../materials/nodes/MeshDistanceNodeMaterial.js';

// Lights
import { PointLight } from 'three/src/lights/PointLight.js';
import { DirectionalLight } from 'three/src/lights/DirectionalLight.js';
import { RectAreaLight } from 'three/src/lights/RectAreaLight.js';
import { SpotLight } from 'three/src/lights/SpotLight.js';
import { AmbientLight } from 'three/src/lights/AmbientLight.js';
import { HemisphereLight } from 'three/src/lights/HemisphereLight.js';
import { LightProbe } from 'three/src/lights/LightProbe.js';
import IESSpotLight from 'three/src/lights/webgpu/IESSpotLight.js';
import {
	PointLightNode,
	DirectionalLightNode,
	RectAreaLightNode,
	SpotLightNode,
	AmbientLightNode,
	HemisphereLightNode,
	LightProbeNode,
	IESSpotLightNode
} from 'three/src/nodes/Nodes.js';

// Tone Mapping
import { LinearToneMapping, ReinhardToneMapping, CineonToneMapping, ACESFilmicToneMapping, AgXToneMapping, NeutralToneMapping } from 'three/src/constants.js';
import { linearToneMapping, reinhardToneMapping, cineonToneMapping, acesFilmicToneMapping, agxToneMapping, neutralToneMapping } from 'three/src/nodes/display/ToneMappingFunctions.js';

/**
 * This version of a node library represents the standard version
 * used in {@link WebGPURenderer}. It maps lights, tone mapping
 * techniques and materials to node-based implementations.
 *
 * @private
 * @augments NodeLibrary
 */
class StandardNodeLibrary extends NodeLibrary {

	/**
	 * Constructs a new standard node library.
	 */
	constructor() {

		super();

		this.addMaterial( MeshPhongNodeMaterial, 'MeshPhongMaterial' );
		this.addMaterial( MeshStandardNodeMaterial, 'MeshStandardMaterial' );
		this.addMaterial( MeshPhysicalNodeMaterial, 'MeshPhysicalMaterial' );
		this.addMaterial( MeshToonNodeMaterial, 'MeshToonMaterial' );
		this.addMaterial( MeshBasicNodeMaterial, 'MeshBasicMaterial' );
		this.addMaterial( MeshLambertNodeMaterial, 'MeshLambertMaterial' );
		this.addMaterial( MeshNormalNodeMaterial, 'MeshNormalMaterial' );
		this.addMaterial( MeshMatcapNodeMaterial, 'MeshMatcapMaterial' );
		this.addMaterial( LineBasicNodeMaterial, 'LineBasicMaterial' );
		this.addMaterial( LineDashedNodeMaterial, 'LineDashedMaterial' );
		this.addMaterial( PointsNodeMaterial, 'PointsMaterial' );
		this.addMaterial( SpriteNodeMaterial, 'SpriteMaterial' );
		this.addMaterial( ShadowNodeMaterial, 'ShadowMaterial' );

		this.addLight( PointLightNode, PointLight );
		this.addLight( DirectionalLightNode, DirectionalLight );
		this.addLight( RectAreaLightNode, RectAreaLight );
		this.addLight( SpotLightNode, SpotLight );
		this.addLight( AmbientLightNode, AmbientLight );
		this.addLight( HemisphereLightNode, HemisphereLight );
		this.addLight( LightProbeNode, LightProbe );
		this.addLight( IESSpotLightNode, IESSpotLight );

		this.addToneMapping( linearToneMapping, LinearToneMapping );
		this.addToneMapping( reinhardToneMapping, ReinhardToneMapping );
		this.addToneMapping( cineonToneMapping, CineonToneMapping );
		this.addToneMapping( acesFilmicToneMapping, ACESFilmicToneMapping );
		this.addToneMapping( agxToneMapping, AgXToneMapping );
		this.addToneMapping( neutralToneMapping, NeutralToneMapping );

	}

}

export default StandardNodeLibrary;
